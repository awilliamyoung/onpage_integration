<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_user_has_role</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_user_has_role">role=a6303520dbcca300ee685e25ca9619c3^EQ<item display_table="sys_user_role" display_value="x_onpr_onpage.user" endquery="false" field="role" goto="false" newquery="false" operator="=" or="false" value="a6303520dbcca300ee685e25ca9619c3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Target Matching Scripts</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	// 1. User is granted role
	// 2. Script attempts to match existing onpage user
	var user = current.user;
	var onPageUser = new GlideRecord('x_onpr_onpage_target');
	onPageUser.addQuery('email', current.user.email); //gets target email from current users emil
	//onPageUser.addQuery('onpage_name', user.user_name); //is this needed for unique or email suffice?
	onPageUser.query();

	if(onPageUser.next()) {
		onPageUser.document_id = current.user; //sys_id of user
		onPageUser.table = "sys_user";
		onPageUser.update();

		//Are following lines 16-22 needed for updating ?
		var u = new GlideRecord('sys_user');
		u.get(current.user);
		u.email = onPageUser.email;
		u.user_name = onPageUser.onpage_name;
		u.first_name = onPageUser.first_name;
		u.last_name = onPageUser.last_name;
		u.update();
	}
	else{
		// 3. If no match, creates a user in OnPage using integration
		try {
			// 4. If match, updates onpage record to the sys_user table and user's document_id
			// 5. After us is create in OnPage, OP will create a new target in SN
			// 6. Script runs to match up newly created target with user in the system.
			var r = new sn_ws.RESTMessageV2('x_onpr_onpage.OnPage Secured', 'createAccount');
			r.setStringParameterNoEscape('opid', '');  //is this needed for creating?
			r.setStringParameterNoEscape('token',  gs.getProperty('x_onpr_onpage.auth.token'));
			r.setStringParameterNoEscape('URLsub', gs.getProperty('x_onpr_onpage.URLsubdomain'));
			r.setStringParameterNoEscape('first', current.user.first_name);
			r.setStringParameterNoEscape('last', current.user.last_name);
			r.setStringParameterNoEscape('email', current.user.email);
			r.setStringParameterNoEscape('secondary', ''); //is this needed for creating
			r.setStringParameterNoEscape('phone', current.user.phone);
			r.setStringParameterNoEscape('key',  gs.getProperty('x_onpr_onpage.auth.key'));

			var response = r.execute();
			var responseBody = response.getBody();
			var httpStatus = response.getStatusCode();
			var obj = new JSON().decode(responseBody);

			var target = new GlideRecord('x_onpr_onpage_target');
			target.initialize();
			target.setValue('email',current.user.email);
			target.setValue('onpage_name',current.user.user_name);
			target.setValue('first_name', current.user.first_name);
			target.setValue('last_name', current.user.last_name);
			target.setValue('document_id', current.user); //sys_id of user
			target.setValue('table', "sys_user");
			//to do:
			//After rest Message(is the current one correct?)...need response results and set OnPage Id on target and
			//necessary fields. These will come from OBJ variable on line 44
			target.insert();
		}
		catch(ex) {
			var message = ex.getMessage();
		}
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>lorena.villanueva</sys_created_by>
        <sys_created_on>2018-08-31 20:16:51</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>17bff585db182f00ee685e25ca961975</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Target Matching Scripts</sys_name>
        <sys_overrides/>
        <sys_package display_value="OnPage Integration" source="x_onpr_onpage">864f25ecdb8ca300ee685e25ca96192d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="OnPage Integration">864f25ecdb8ca300ee685e25ca96192d</sys_scope>
        <sys_update_name>sys_script_17bff585db182f00ee685e25ca961975</sys_update_name>
        <sys_updated_by>lorena.villanueva</sys_updated_by>
        <sys_updated_on>2018-09-13 15:59:02</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=17bff585db182f00ee685e25ca961975"/>
</record_update>
